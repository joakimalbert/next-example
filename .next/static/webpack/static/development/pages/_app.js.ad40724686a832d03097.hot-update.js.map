{"version":3,"file":"static/webpack/static/development/pages/_app.js.ad40724686a832d03097.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import React from 'react'\nimport App, { Container } from 'next/app'\nimport { appWithTranslation } from '../i18n'\nimport app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\n// Should be env variables but adding just for test and not here\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBmvFYEVOt22dV6-TXkIFwFxtNOPZ2nTFU\",\n  authDomain: \"albert-sandbox.firebaseapp.com\",\n  databaseURL: \"https://albert-sandbox.firebaseio.com\",\n  projectId: \"firebase-albert-sandbox\",\n  storageBucket: \"firebase-albert-sandbox.appspot.com\",\n  messagingSenderId: \"357981576708\"\n};\n\nclass MyApp extends App {\n\n  componentDidMount() {\n    app.initializeApp(firebaseConfig);\n    console.log(app.auth());\n\n    // To support email and phone number we need to validate if email first, then run the email login, otherwise use the /phone/login\n    app.auth().signInWithEmailAndPassword('joakim@hejalbert.se', '332625')\n      .then(function(res) {\n        console.log(res.user.uid);\n\n        app.database().ref('/users/' + res.user.uid).once('value').then(function(snap) {\n          if (snap.exists()) {\n              const userdata = snap.val();\n              console.log(userdata);\n              app.database().ref('/userData/' + res.user.uid).once('value').then(function(p) {\n                console.log(p);\n              });\n          }\n        });\n\n\n\n\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  }\n\n  render () {\n    const { Component, pageProps } = this.props\n    return (\n      <Container>\n        <Component {...pageProps} />\n      </Container>\n    )\n  }\n}\n\nexport default appWithTranslation(MyApp);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAEA;AAKA;;;;AArCA;AACA;AAuCA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}